@page
@model WebApp.Pages.RepositoryModel
@{
    Layout = "_Layout";
}


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="~/js/pages/PublicRepository.js" defer></script>

    <style>
        .info-container {
            overflow: auto;
            padding-bottom: 100px;
            position: relative;
            display: flex;
            flex-direction: column;
            min-height: 100vh;
        }

        .comment-container {
            margin-bottom: 60px;
            position: relative;
            z-index: 1;
            flex: 1;
        }

        .comment-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .comment-date {
            font-size: 0.875rem;
            color: #c0c3c5;
            display: block;
        }

        .comment-message {
            font-size: 1rem;
            line-height: 1.5;
        }

        .response-btn {
            align-items: start;
            border: none;
        }

        .delete-btn {
            align-items: start;
            border: none;
        }

        .edit-btn {
            align-items: start;
            border: none;
        }

        .button-container {
            text-align: right;
        }

        .subcomment-container {
            display: block;
        }

        .subcomment {
            margin-left: 2rem;
            border-left: 3px solid #dee2e6;
            padding-left: 1rem;
            margin-top: 0.5rem;
        }

        .subcomment-btn {
            width: 100%;
            background-color: transparent;
            border: none;
            color: #8d9397;
            padding: 10px;
            cursor: pointer;
            text-align: left;
            display: block;
        }

    </style>

</head>
<body> 
    <div class="container">
        <div class="row align-items-center">
            <h1 id="repoName" class="col-auto"></h1>
            <span id="repoVisibility" class="col-auto badge text-bg-info"></span>
        </div>

        <div class="row border-bottom border-2 mb-3 pb-2">
            <h6 id="repoTags" class="col-auto">Tags: </h6>
        </div>

        <div class="row">
            <div class="col-8">
                <div class="row mt-3 py-2">
                    <h5 class="col-auto">Branch:</h5>
                    <div class="col-3">
                        <select id="branchSelect" class="form-select" aria-label="Default select example">
                            @*Options generated by JS script*@
                        </select>
                    </div>

                    <div id="branchDiv" class="row border border-1 rounded-1 my-3 py-4">
                    </div>
                </div>
            </div>
            @*Control Buttons*@
            <div id="controlDiv" class="col-4 border-start p-4 invisible">
                <button id="modifyBtn" type="button" class="btn btn-primary w-100 m-2">Modificar Repositorio</button>
                <button id="deleteBtn" type="button" class="btn btn-danger w-100 m-2">Eliminar Repositorio</button>
                <hr />
                <div class="accordion accordion" id="accordionFlushExample">
                    <div class="accordion-item">
                        <h2 class="accordion-header">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseOne" aria-expanded="false" aria-controls="flush-collapseOne">
                                Crear Branch
                            </button>
                        </h2>
                        <div id="flush-collapseOne" class="accordion-collapse collapse" data-bs-parent="#accordionFlushExample">
                            <div class="accordion-body">
                                <input id="branchNameInput" type="text" class="form-control" placeholder="Nombre del Branch" />
                                <button id="createBranchBtn" type="button" class="btn btn-primary w-100 mt-2">Crear Branch</button>
                            </div>
                        </div>
                    </div>
                </div>
                <button id="deleteBranchBtn" type="button" class="btn btn-danger w-100 m-2">Eliminar Branch</button>
            </div>
        </div>

        <div class="row justify-content-center">
			<div class="col-md-10">
                <div class="button-container">
                    <button class="response-btn" id="commentBtn">Comment</button>
                </div>
				<div class="comment-container">
                    @*Comments generated by JS script*@
                </div>
            </div>
        </div>

    </div>

    <script>
        const commentsContainer = document.getElementsByClassName("comment-container")[0];
        let comments = null;

        async function loadRepoComments(repoId) {
            const commentsUrl = `https://localhost:7269/api/comment/GetByRepoId/${repoId}`;
            try {
                const commResponse = await fetch(commentsUrl);
                if (!commResponse.ok) {
                    throw new Error(`Response status: ${commResponse.status}`);
                }
                comments = await commResponse.json();

                if (Array.isArray(comments)) {
                    console.log(comments);
                    displayComments(comments);
                }

            } catch (error) {
                console.error(error.message);
            }
        }

        function displayComments(commentsList) {
            commentsContainer = "";
            commentsList.forEach(comment => {
                commentsContainer.innerHTML += commentFormat(comment);
            })
        }



        function commentFormat(commentObj) {
            let commentHTML = `<div class="card mt-3 shadow-lg" id="2">
                                            <div class="comment-header bg-primary text-white p-3">
                                                <div>
                                                    <span class="card-title mb-0">${commentObj.user}</span>
                                                    <span class="comment-date">${getDate(commentObj)}</span>
                                                </div>
                                                <div class="button-container">
                                                    
                                                </div>
                                            </div>
                                            <div class="card-body">
                                                <div class="comment-message">${commentObj.message}</div>
                                                <div class="button-container">
                                                    <button class="response-btn">Respond</button>
                                                </div>
                                            <button class="subcomment-btn">Subcomments ></button>
                                                <div class="subcomment-container">`;

            commentObj.subcomments.forEach(subcomment => {
                commentHTML += subcommentFormat(subcomment);
            });

            commentHTML += `</div>
                                </div>
                            </div>`;

            return commentHTML;
        }

        function subcommentFormat(subcommentObj) {
            let subcommentHTML = `<div class="subcomment">
                                                <div class="comment-header bg-secondary text-white p-2">
                                                    <div>
                                                        <span class="card-title mb-0">${subcommentObj.user}</span>
                                                        <span class="comment-date">${getDate(subcommentObj)}</span>
                                                    </div>
                                                    <div class="button-container">
                                                        <button class="delete-btn">Delete</button>
                                                        <button class="edit-btn">Edit</button>
                                                    </div>
                                                </div>
                                                <div class="comment-message p-2">${subcommentObj.message}</div>
                                            </div>`;

            return subcommentHTML;
        }

        function getDate(comment) {
            let date = formatDate(comment.creationDate);

            if (comment.creationDate != comment.lastDate) {
                date += ` (Edited ${formatDate(comment.lastDate)})`;
            }

            return date;
        }

        function formatDate(date) {
            const options = date.split(/[-T.Z]/);
            let formatedDate = `${options[2]}/${options[1]}/${options[0]} ${options[3]}`;
            return formatedDate;
        }

        loadRepoComments("string");
    </script>
</body>
</html>

